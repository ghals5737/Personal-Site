name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            # Update environment variables
            export IMAGE_TAG=${{ steps.meta.outputs.version }}
            export SITE_URL=${{ secrets.SITE_URL }}
            export AUTHOR_NAME="${{ secrets.AUTHOR_NAME }}"
            export AUTHOR_EMAIL=${{ secrets.AUTHOR_EMAIL }}
            export AUTHOR_TWITTER=${{ secrets.AUTHOR_TWITTER }}
            export AUTHOR_GITHUB=${{ secrets.AUTHOR_GITHUB }}
            export GITHUB_URL=${{ secrets.GITHUB_URL }}
            export TWITTER_URL=${{ secrets.TWITTER_URL }}
            export LINKEDIN_URL=${{ secrets.LINKEDIN_URL }}
            
            # Login to GitHub Container Registry
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            # Pull latest image
            docker pull ghcr.io/${{ github.repository }}:${{ steps.meta.outputs.version }}
            
            # Stop and remove old containers
            docker-compose down || true
            
            # Start new containers
            docker-compose up -d
            
            # Wait for services to be healthy
            echo "Waiting for services to start..."
            sleep 30
            
            # Health check
            if curl -f http://localhost:3000/api/health; then
              echo "‚úÖ Deployment successful!"
            else
              echo "‚ùå Deployment failed!"
              docker-compose logs
              exit 1
            fi
            
            # Clean up old images
            docker image prune -f
            
            echo "üéâ Deployment completed!"

  notify:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Notify deployment status
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          channel: '#deployments'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
